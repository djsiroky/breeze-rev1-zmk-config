/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        repeat_key: repeat_key {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "REPEAT_KEY";
        };
    };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 12 13 14 21 22 23 24 25 26 27 28 29 36 37 38 39 40 41 42 49 50 51 52 53 54 55 56 57 62 63 64 65>;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 15 16 17 18 19 20 30 31 32 33 34 35 43 44 45 46 47 48 58 59 60 61>;
        };

        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>, <&kp CAPSLOCK>;
        };

        numpad_layer_gui: numpad_layer_gui {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMPAD_LAYER_GUI";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&tog 2>;
        };

        // Swapper for smart alt+tab
        swapper: swapper {
            compatible = "zmk,behavior-smart-toggle";
            #binding-cells = <0>;
            bindings = <&kp LALT>, <&kp TAB>;
            ignored-key-positions = <31 32 33 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // Ref: https://zmkfirmware.dev/docs/codes/
            // ---  MAIN  -----------------------------------------------------------------------------------------------------------------------
            // |    ESC    |     1     |     2     |     3      |      4      |      5     |                           |      6      |      7     |      8      |      9     |     0    |    BSPC    | |    -/_    |     =/+     |    GRAVE    |
            // |    TAB    |     Q     |     W     |     E      |      R      |      T     |                           |      Y      |      U     |      I      |      O     |     P    |    DEL     | |     \     |      [      |      ]      |
            // |   LCTRL   |     A     |     S     |     D      |      F      |      G     |                           |      H      |      J     |      K      |      L     |     ;    |     '      | |           |      UP     |             |
            // |   SHIFT   |     Z     |     X     |     C      |      V      |      B     |                           |      N      |      M     |      ,      |      .     |     /    |   RSHIFT   | |     L     |      DN     |      R      |
            //                                     |   NUMPAD   |     LALT    |    LCMD    |   SPACE    |  |   ENTER   |   FUNCTION  |  MACOS APP |  MACOS LANG |

            bindings = <
&kp ESC            &kp N1           &kp N2           &kp N3        &kp N4             &kp N5  &kp N6         &kp N7              &kp N8        &kp N9            &kp N0               &kp BSPC    &kp MINUS  &kp EQUAL  &kp GRAVE
&kp TAB            &kp Q            &kp W            &kp E         &kp R              &kp T   &kp Y          &kp U               &kp I         &kp O             &kp P                &kp DEL     &kp BSLH   &kp LBKT   &kp RBKT
&shift_caps        &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &kp G   &kp H          &hmr RIGHT_SHIFT J  &hmr RCTRL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMI  &kp APOS    &kp UP
&sk LCTRL          &kp Z            &kp X            &kp C         &kp V              &kp B   &kp N          &kp M               &kp COMMA     &kp DOT           &kp FSLH             &kp RSHIFT  &kp LEFT   &kp DOWN   &kp RIGHT
&numpad_layer_gui  &kp LALT         &lt 1 TAB        &kp SPACE     &kp RET            &mo 2   &kp LG(GRAVE)  &kp LA(SPACE)
            >;
        };

        nav_layer {
            // ---  FUNCTION  -------------------------------------------------------------------------------------------------------------------
            // | BT Clear  |  BT Prev  |  BT Next  |            |             |            |                           |             |            |             |            |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |            |     UP      |            |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |    LEFT    |    DOWN     |   RIGHT    |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |             |    MUTE    |  VOL DOWN   |   VOL UP   |          |            | |           |             |             |
            //                                     |            |             |            |            |  |           |             |            |             |

            bindings = <
&trans    &trans     &trans          &trans    &trans      &trans  &trans          &trans          &trans        &trans     &trans  &kp K_MUTE  &trans                &trans        &trans
&swapper  &kp LA(F4) &kp LC(LS(TAB)  &kp UP    &kp LC(TAB) &trans  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &trans  &trans      &trans                &trans        &trans
&trans    &trans     &kp LEFT        &kp DOWN  &kp RIGHT   &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans      &kp C_VOLUME_UP
&trans    &trans     &trans          &trans    &trans      &trans  &trans          &trans          &trans        &trans     &trans  &trans      &kp C_BRIGHTNESS_DEC  &kp C_VOL_DN  &kp C_BRIGHTNESS_INC
&trans    &trans     &trans          &trans    &trans      &trans  &trans          &trans
            >;
        };

        numpad_layer {
            // ---  NUMPAD  -------------------------------------------------------------------------------------------------------------------
            // |           |           |           |            |             |            |                           |       =       |      /       |      *       |      -     |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |       7       |      8       |      9       |      +     |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |       4       |      5       |      6       |            |          |            | |           |             |             |
            // |           |           |           |            |             |            |                           |       1       |      2       |      3       |            |          |            | |           |             |             |
            //                                     |            |             |            |            |  |           |       0       |      .       |              |

            bindings = <
&tog 2      &trans  &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &kp N7        &kp N8        &kp N9        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp PERIOD  &kp N0  &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3          &trans            &trans             &trans                 &trans           &trans            &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans         &trans          &trans                &trans            &trans             &trans                 &trans           &trans            &trans  &trans  &trans  &trans  &trans
&trans      &trans        &kp LESS_THAN  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp GREATER_THAN  &trans  &trans  &trans
&trans      &trans        &trans         &trans          &trans                &trans            &trans             &trans                 &trans           &trans            &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans         &trans          &trans                &trans            &trans             &trans
            >;
        };
    };
};
